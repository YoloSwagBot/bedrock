
/**
 * In FeatureFragment that extends this fragment do the following:
 *      (1)
        private lateinit var binding: FeatureHomeBinding
        private lateinit var viewModel: FeatureVM
        (2)
        override fun setupBindingAndLayout(container: ViewGroup?){
            binding = createBinding(container) as FragFeatureBinding
            binding.viewModel = ViewModelProvider(this).get(FeatureVM::class.java)
            viewModel = binding.viewModel as FeatureVM
            layout = binding.root
            binding.lifecycleOwner = viewLifecycleOwner
        }
 */
abstract class BaseFragment : Fragment() {

    protected lateinit var layout: View

    abstract fun getLayoutId(): Int

    // ============================================================================================= onCreateView(...)

    final override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        setupBindingAndLayout(container)
        setupObservables()
        return layout
    }

    protected abstract fun setupBindingAndLayout(container: ViewGroup?)

    protected fun createBinding(container: ViewGroup?): Any =
        DataBindingUtil.inflate(layoutInflater, getLayoutId(), container, false)

    protected abstract fun setupObservables()

    // ============================================================================================= other

    abstract fun onBackPressed(): Boolean

}
